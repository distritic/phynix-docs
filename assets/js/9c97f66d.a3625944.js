"use strict";(self.webpackChunkphynix_docs=self.webpackChunkphynix_docs||[]).push([[3818],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||c;return n?a.createElement(b,i(i({ref:t},s),{},{components:n})):a.createElement(b,i({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,i=new Array(c);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<c;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3629:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const c={},i="Exports",o={unversionedId:"banking/exports",id:"banking/exports",title:"Exports",description:"Server-side",source:"@site/docs/banking/exports.md",sourceDirName:"banking",slug:"/banking/exports",permalink:"/docs/banking/exports",draft:!1,editUrl:"https://github.com/distritic/phynix-docs/tree/main/docs/banking/exports.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/banking/events"},next:{title:"Accessing the Object",permalink:"/docs/business/object/get-object"}},l={},u=[{value:"Server-side",id:"server-side",level:2},{value:"GetAccount",id:"getaccount",level:3},{value:"GetAccountByName",id:"getaccountbyname",level:3},{value:"FetchAndInitialize",id:"fetchandinitialize",level:3},{value:"CreateNewAccount",id:"createnewaccount",level:3},{value:"DestroyCharacterAccount",id:"destroycharacteraccount",level:3},{value:"DestroyAccount",id:"destroyaccount",level:3},{value:"IsAnyAccountCharactersOnline",id:"isanyaccountcharactersonline",level:3}],s={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"exports"},"Exports"),(0,r.kt)("h2",{id:"server-side"},"Server-side"),(0,r.kt)("h3",{id:"getaccount"},"GetAccount"),(0,r.kt)("p",null,"This function is used to fetch an ",(0,r.kt)("strong",{parentName:"p"},"already initialized")," account by account ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local account --[[table]] = exports.px_banking:GetAccount(accountId --[[int]]);\n-- accountId: the account ID to get the account of\n")),(0,r.kt)("h3",{id:"getaccountbyname"},"GetAccountByName"),(0,r.kt)("p",null,"This function is used to fetch an ",(0,r.kt)("strong",{parentName:"p"},"already initialized")," account by account name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local account --[[table]] = exports.px_banking:GetAccountByName(accountName --[[string]]);\n-- accountName: the account name to get the account of\n")),(0,r.kt)("h3",{id:"fetchandinitialize"},"FetchAndInitialize"),(0,r.kt)("p",null,"This function is used to fetch an account by account ID. The account will be initialized if it isn't already in memory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local account --[[table]] = exports.px_banking:FetchAndInitialize(accountId --[[int]]);\n-- accountId: the account ID to get the account of\n")),(0,r.kt)("h3",{id:"createnewaccount"},"CreateNewAccount"),(0,r.kt)("p",null,"This function is used to create a new bank account. The account will be initialized if it isn't already in memory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.px_banking:CreateNewAccount(name --[[string]], label --[[string]], type --[[string]], balance --[[int]], overdraftLimit --[[int]], noteRequired --[[bool]], characters --[[table]], logLimit --[[int]], characterData --[[table]], cb --[[function]]);\n-- cb(account): callback will return the account object if successful\n")),(0,r.kt)("h3",{id:"destroycharacteraccount"},"DestroyCharacterAccount"),(0,r.kt)("p",null,"This function is used to remove an existing character account from memory. It will be saved to the database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.px_banking:DestroyCharacterAccount(charId --[[int]]);\n")),(0,r.kt)("h3",{id:"destroyaccount"},"DestroyAccount"),(0,r.kt)("p",null,"This function is used to remove an existing account from memory. It will be saved to the database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.px_banking:DestroyAccount(accountId --[[int]], cb --[[function]]);\n")),(0,r.kt)("h3",{id:"isanyaccountcharactersonline"},"IsAnyAccountCharactersOnline"),(0,r.kt)("p",null,"This function will return whether any characters which have access to the account are currently online."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.px_banking:IsAnyAccountCharactersOnline(account --[[table]], cb --[[function]]);\n-- cb(result): result is true if account characters are online\n")))}d.isMDXComponent=!0}}]);