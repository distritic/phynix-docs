"use strict";(self.webpackChunkphynix=self.webpackChunkphynix||[]).push([[701],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return p}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),o=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=o(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=o(r),p=a,g=m["".concat(u,".").concat(p)]||m[p]||d[p]||i;return r?n.createElement(g,s(s({ref:t},c),{},{components:r})):n.createElement(g,s({ref:t},c))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var o=2;o<i;o++)s[o]=r[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1945:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return o},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),s=["components"],l={sidebar_position:2},u="Methods",o={unversionedId:"users/class/methods",id:"users/class/methods",isDocsHomePage:!1,title:"Methods",description:"adjustChatSuggestions",source:"@site/docs/users/class/methods.md",sourceDirName:"users/class",slug:"/users/class/methods",permalink:"/docs/users/class/methods",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/users/class/methods.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Accessing the Object",permalink:"/docs/users/class/get-object"},next:{title:"Attributes",permalink:"/docs/users/class/attributes"}},c=[{value:"adjustChatSuggestions",id:"adjustchatsuggestions",children:[],level:2},{value:"set",id:"set",children:[],level:2},{value:"get",id:"get",children:[],level:2},{value:"displayMoney",id:"displaymoney",children:[],level:2},{value:"setSessionVar",id:"setsessionvar",children:[],level:2},{value:"getSessionVar",id:"getsessionvar",children:[],level:2},{value:"getIdentifier",id:"getidentifier",children:[],level:2},{value:"getSteamId",id:"getsteamid",children:[],level:2},{value:"getComId",id:"getcomid",children:[],level:2},{value:"getGroup",id:"getgroup",children:[],level:2},{value:"isStaff",id:"isstaff",children:[],level:2}],d={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"methods"},"Methods"),(0,i.kt)("h2",{id:"adjustchatsuggestions"},"adjustChatSuggestions"),(0,i.kt)("p",null,"This function will refresh all chat command suggestions. Only commands which the user can access will show suggestions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"user.adjustChatSuggestions(job --[[string]], wl --[[table]]);\n-- job?: the current character job\n-- wl?: the current character whitelist dictionary\n")),(0,i.kt)("h2",{id:"set"},"set"),(0,i.kt)("p",null,"This function is used to set a field in the user object. The collection of fields which exist for a user are declared in the ",(0,i.kt)("a",{parentName:"p",href:"attributes"},"Attributes")," guide."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"user.set(key --[[string]], value --[[any]]);\n-- key: the field to be updated\n-- value: the new value assigned to the field\n")),(0,i.kt)("h2",{id:"get"},"get"),(0,i.kt)("p",null,"This function is used to return a field from the user object. The collection of fields which exist for a user are delared in the ",(0,i.kt)("a",{parentName:"p",href:"attributes"},"Attributes")," guide."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local value --[[any]] = user.get(key --[[string]]);\n-- key: the field to return\n")),(0,i.kt)("h2",{id:"displaymoney"},"displayMoney"),(0,i.kt)("p",null,"This function will temporarily show your money display."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"user.displayMoney(money --[[int]]);\n-- money: the money of the character\n")),(0,i.kt)("h2",{id:"setsessionvar"},"setSessionVar"),(0,i.kt)("p",null,"This function will store a temporary session variable of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"user.setSessionVar(key --[[string]], value --[[any]]);\n-- key: the field to be updated\n-- value: the new value assigned to the field\n")),(0,i.kt)("h2",{id:"getsessionvar"},"getSessionVar"),(0,i.kt)("p",null,"This function will return a temporary session variable of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local value --[[any]] = user.get(key --[[string]]);\n-- key: the field to return\n")),(0,i.kt)("h2",{id:"getidentifier"},"getIdentifier"),(0,i.kt)("p",null,"This function will return the identifier of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local identifier --[[string]] = user.getIdentifier();\n")),(0,i.kt)("h2",{id:"getsteamid"},"getSteamId"),(0,i.kt)("p",null,"This function will return the steam ID of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local steamId --[[string]] = user.getSteamId();\n")),(0,i.kt)("h2",{id:"getcomid"},"getComId"),(0,i.kt)("p",null,"This function will return the steam community ID of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local comId --[[int]] = user.getComId();\n")),(0,i.kt)("h2",{id:"getgroup"},"getGroup"),(0,i.kt)("p",null,"This function will return the group of a user."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local group --[[string]] = user.getGroup();\n")),(0,i.kt)("h2",{id:"isstaff"},"isStaff"),(0,i.kt)("p",null,"This function will return whether a user belongs to a staff group."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local isStaff --[[bool]] = user.isStaff(includeDev --[[bool]]);\n-- includeDev?: whether developer groups should be included\n")))}m.isMDXComponent=!0}}]);