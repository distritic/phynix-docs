"use strict";(self.webpackChunkphynix_docs=self.webpackChunkphynix_docs||[]).push([[8874],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=i.createContext({}),o=function(e){var t=i.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=o(e.components);return i.createElement(m.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,m=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=o(n),p=a,g=d["".concat(m,".").concat(p)]||d[p]||c[p]||r;return n?i.createElement(g,l(l({ref:t},u),{},{components:n})):i.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=p;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s[d]="string"==typeof e?e:a,l[1]=s;for(var o=2;o<r;o++)l[o]=n[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3754:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var i=n(7462),a=(n(7294),n(3905));const r={},l="Exports",s={unversionedId:"items/exports",id:"items/exports",title:"Exports",description:"Client-side",source:"@site/docs/items/exports.md",sourceDirName:"items",slug:"/items/exports",permalink:"/docs/items/exports",draft:!1,editUrl:"https://github.com/distritic/phynix-docs/tree/main/docs/items/exports.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/items/events"},next:{title:"Introduction",permalink:"/docs/inventory/intro"}},m={},o=[{value:"Client-side",id:"client-side",level:2},{value:"RegisterItemHandler",id:"registeritemhandler",level:3},{value:"UseItem",id:"useitem",level:3},{value:"GetItemAttribute",id:"getitemattribute",level:3},{value:"Server-side",id:"server-side",level:2},{value:"GetItem",id:"getitem",level:3},{value:"GetItems",id:"getitems",level:3},{value:"GetItemById",id:"getitembyid",level:3},{value:"GetItemDurabilityList",id:"getitemdurabilitylist",level:3},{value:"RegisterItemHandler",id:"registeritemhandler-1",level:3},{value:"AddItem",id:"additem",level:3},{value:"AddItems",id:"additems",level:3},{value:"RemoveItem",id:"removeitem",level:3}],u={toc:o},d="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"exports"},"Exports"),(0,a.kt)("h2",{id:"client-side"},"Client-side"),(0,a.kt)("p",null,"Return all attributes of a specific item."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},"local item --[[table]] = exports.phynix:GetItem(item --[[string]]);\n")),(0,a.kt)("h3",{id:"registeritemhandler"},"RegisterItemHandler"),(0,a.kt)("p",null,"Register a new usage handler when an item is used. An item can have multiple handlers from different resources, but only one handler per resource."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},'exports.phynix:RegisterItemHandler("scratchcard", function(item, invIndex)\n  local rand = math.random();\n  if rand < 0.01 then\n    TriggerEvent("core:notify", "You have won :D");\n  else\n    TriggerEvent("core:notify", "You did not win :(");\n  end\nend);\n')),(0,a.kt)("h3",{id:"useitem"},"UseItem"),(0,a.kt)("p",null,"Force the player to use an item. This function will ",(0,a.kt)("strong",{parentName:"p"},"not")," check if the player has the item before it is used."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},"exports.phynix:UseItem(name --[[string]], invIndex --[[int]]);\n-- name: the name of the item to use\n-- invIndex: the inventory index of item used\n")),(0,a.kt)("h3",{id:"getitemattribute"},"GetItemAttribute"),(0,a.kt)("p",null,"Return an attribute of a specific item."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},"local value --[[any]] = exports.phynix:GetItemAttribute(name --[[string]], key --[[string]]);\n-- name: the item name\n-- key: the key of the attribute to return\n")),(0,a.kt)("p",null,"This can be useful when specific item data is needed, for instance the weight of a Pistol:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},'local weight = exports.phynix:GetItemAttribute("pistol", "weight");\nTriggerEvent("core:notify", "A Pistol weighs "..weight.." units");\n')),(0,a.kt)("h2",{id:"server-side"},"Server-side"),(0,a.kt)("h3",{id:"getitem"},"GetItem"),(0,a.kt)("p",null,"Return all attributes of a specific item."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local item --[[table]] = exports.phynix:GetItem(item --[[string]]);\n")),(0,a.kt)("h3",{id:"getitems"},"GetItems"),(0,a.kt)("p",null,"Return a dictionary of all items and their attributes, indexed by name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local items --[[table]] = exports.phynix:GetItems();\n")),(0,a.kt)("h3",{id:"getitembyid"},"GetItemById"),(0,a.kt)("p",null,"Return all attributes of a specific item, except using the item ID rather than name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local item --[[table]] = exports.phynix:GetItemById(itemId --[[int]]);\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This is slower than directly accessing an item by index using ",(0,a.kt)("inlineCode",{parentName:"p"},"GetItem")," and should be avoided.")),(0,a.kt)("h3",{id:"getitemdurabilitylist"},"GetItemDurabilityList"),(0,a.kt)("p",null,"Return a dictionary of key-value pairs containing item name and durability value respectively."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="client/main.lua"',title:'"client/main.lua"'},'local durability --[[table]] = exports.phynix:GetItemDurabilityList();\nlocal phoneDurability = durability["phone"];\n')),(0,a.kt)("h3",{id:"registeritemhandler-1"},"RegisterItemHandler"),(0,a.kt)("p",null,"Register a new usage handler when an item is used. An item can have multiple handlers from different resources, but only one handler per resource."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},'exports.phynix:RegisterItemHandler("scratchcard", function(src, item, invIndex)\n  local rand = math.random();\n  if rand < 0.01 then\n    TriggerClientEvent("core:notify", src, "You have won :D");\n  else\n    TriggerClientEvent("core:notify", src, "You did not win :(");\n  end\nend);\n')),(0,a.kt)("h3",{id:"additem"},"AddItem"),(0,a.kt)("p",null,"Add an item to the dictionary of items. This function is called by the resource for each item in the database ",(0,a.kt)("inlineCode",{parentName:"p"},"items")," table, but can also be called via export to add items directly from a resource."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.phynix:AddItem(name --[[string]], itemData --[[table]]);\n-- name: the item name to add, must be unique\n-- itemData: the item attributes\n")),(0,a.kt)("h3",{id:"additems"},"AddItems"),(0,a.kt)("p",null,"Add multiple new items to the already existing dictionary of items."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.phynix:AddItems(items --[[table]]);\n-- items: a dictionary in the form [itemName] = itemData\n")),(0,a.kt)("h3",{id:"removeitem"},"RemoveItem"),(0,a.kt)("p",null,"This function will only remove items created via ",(0,a.kt)("inlineCode",{parentName:"p"},"AddItem")," from a resource."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"exports.phynix:RemoveItem(name --[[string]]);\n-- name: the item name to remove\n")))}c.isMDXComponent=!0}}]);