"use strict";(self.webpackChunkphynix=self.webpackChunkphynix||[]).push([[7],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(n),m=i,u=p["".concat(s,".").concat(m)]||p[m]||h[m]||r;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2168:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:3},s="Attributes",d={unversionedId:"characters/class/attributes",id:"characters/class/attributes",isDocsHomePage:!1,title:"Attributes",description:"The character object is supplied with a set of useful attributes.",source:"@site/docs/characters/class/attributes.md",sourceDirName:"characters/class",slug:"/characters/class/attributes",permalink:"/docs/characters/class/attributes",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/characters/class/attributes.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Methods",permalink:"/docs/characters/class/methods"},next:{title:"Events",permalink:"/docs/characters/events"}},c=[{value:"Static",id:"static",children:[{value:"id: <code>int</code>",id:"id-int",children:[],level:3},{value:"identifier: <code>string</code>",id:"identifier-string",children:[],level:3},{value:"dateOfBirth: <code>string</code>",id:"dateofbirth-string",children:[],level:3},{value:"gender: <code>string</code>",id:"gender-string",children:[],level:3},{value:"money: <code>int</code>",id:"money-int",children:[],level:3},{value:"crypto: <code>int</code>",id:"crypto-int",children:[],level:3},{value:"phone: <code>int</code>",id:"phone-int",children:[],level:3},{value:"init: <code>bool</code>",id:"init-bool",children:[],level:3},{value:"disabled: <code>bool</code>",id:"disabled-bool",children:[],level:3},{value:"job: <code>string</code>",id:"job-string",children:[],level:3},{value:"jailTime: <code>int</code>",id:"jailtime-int",children:[],level:3},{value:"spawn: <code>int</code>",id:"spawn-int",children:[],level:3},{value:"playTime: <code>int</code>",id:"playtime-int",children:[],level:3},{value:"mcash: <code>int</code>",id:"mcash-int",children:[],level:3},{value:"walkstyle: <code>string</code>",id:"walkstyle-string",children:[],level:3}],level:2},{value:"Dynamic",id:"dynamic",children:[{value:"name: <code>table</code>",id:"name-table",children:[],level:3},{value:"needs: <code>table</code>",id:"needs-table",children:[],level:3},{value:"paychecks: <code>table</code>",id:"paychecks-table",children:[],level:3},{value:"created: <code>table</code>",id:"created-table",children:[],level:3},{value:"injuries: <code>table</code>",id:"injuries-table",children:[],level:3},{value:"licenses: <code>table</code>",id:"licenses-table",children:[],level:3},{value:"whitelist: <code>table</code>",id:"whitelist-table",children:[],level:3},{value:"appearance: <code>table</code>",id:"appearance-table",children:[],level:3},{value:"inventory: <code>table</code>",id:"inventory-table",children:[],level:3}],level:2}],h={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attributes"},"Attributes"),(0,r.kt)("p",null,"The character object is supplied with a set of useful attributes."),(0,r.kt)("h2",{id:"static"},"Static"),(0,r.kt)("h3",{id:"id-int"},"id: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"This is the unique identifier of the character."),(0,r.kt)("h3",{id:"identifier-string"},"identifier: ",(0,r.kt)("inlineCode",{parentName:"h3"},"string")),(0,r.kt)("p",null,"This is the Discord identifier of the character owner, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"discord:368480949693841408"),"."),(0,r.kt)("h3",{id:"dateofbirth-string"},"dateOfBirth: ",(0,r.kt)("inlineCode",{parentName:"h3"},"string")),(0,r.kt)("p",null,"The date of birth of the character in the format ",(0,r.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD"),"."),(0,r.kt)("h3",{id:"gender-string"},"gender: ",(0,r.kt)("inlineCode",{parentName:"h3"},"string")),(0,r.kt)("p",null,"The gender of the character, stored as a single letter - either ",(0,r.kt)("inlineCode",{parentName:"p"},"m")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"f"),"."),(0,r.kt)("h3",{id:"money-int"},"money: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The money of the character."),(0,r.kt)("h3",{id:"crypto-int"},"crypto: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The crypto of the character."),(0,r.kt)("h3",{id:"phone-int"},"phone: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The phone number of the character, a 10 digit number which cannot start with ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("h3",{id:"init-bool"},"init: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("p",null,"A flag which determines whether this is the first time the character is initialised. This flag is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," once first initialisation is complete."),(0,r.kt)("h3",{id:"disabled-bool"},"disabled: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("p",null,"A flag which determines whether the character is playable. This flag is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," when the character is sent to the morgue."),(0,r.kt)("h3",{id:"job-string"},"job: ",(0,r.kt)("inlineCode",{parentName:"h3"},"string")),(0,r.kt)("p",null,"The job of the character, this is automatically reset to ",(0,r.kt)("inlineCode",{parentName:"p"},"civ")," on connection."),(0,r.kt)("h3",{id:"jailtime-int"},"jailTime: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The remaining jail sentence of the character in minutes."),(0,r.kt)("h3",{id:"spawn-int"},"spawn: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The configured house ID which the character should spawn at."),(0,r.kt)("h3",{id:"playtime-int"},"playTime: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The total play-time of the character in minutes."),(0,r.kt)("h3",{id:"mcash-int"},"mcash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"int")),(0,r.kt)("p",null,"The money stored in the motel room of the character."),(0,r.kt)("h3",{id:"walkstyle-string"},"walkstyle: ",(0,r.kt)("inlineCode",{parentName:"h3"},"string")),(0,r.kt)("p",null,"The walkstyle animation dictionary name of the character."),(0,r.kt)("h2",{id:"dynamic"},"Dynamic"),(0,r.kt)("h3",{id:"name-table"},"name: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The name of the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["first"] = "Miles",\n  ["middle"] = "",\n  ["last"] = "Blaine"\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"When unused, the middle name is stored as an empty string ",(0,r.kt)("inlineCode",{parentName:"p"},'""'),"."))),(0,r.kt)("h3",{id:"needs-table"},"needs: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The basic needs of the character, such as food and water. These are stored as a dictionary table in Lua, and as values between ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"100"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A higher ",(0,r.kt)("inlineCode",{parentName:"li"},"thirst")," value reduces the need for water, and vice versa."),(0,r.kt)("li",{parentName:"ul"},"A higher ",(0,r.kt)("inlineCode",{parentName:"li"},"hunger")," value reduces the need for food, and vice versa."),(0,r.kt)("li",{parentName:"ul"},"A higher ",(0,r.kt)("inlineCode",{parentName:"li"},"stress")," value increases the stress level, and vice versa.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["thirst"] = 95.43,\n  ["hunger"] = 47.11,\n  ["stress"] = 1.67\n}\n')),(0,r.kt)("h3",{id:"paychecks-table"},"paychecks: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The paychecks awaiting to be collected by the character. This table structure is more complex, but can be represented as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["state"] = {\n    ["Los Santos Police Dept."] = 1250,\n    ["LSPD Auto Impound"] = 500\n  },\n  ["pdm"] = {\n    ["Premium Deluxe Motorsport"] = 5000\n  },\n  ["vunicorn"] = {\n    ["Vanilla Unicorn"] = 3500\n  }\n}\n')),(0,r.kt)("p",null,"What does this mean? Let's take a look."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The character has two awaiting paychecks which will be deducted from the balance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," business. These will contain a note, labelled Los Santos Police Dept. and LSPD Auto Impound. "),(0,r.kt)("li",{parentName:"ul"},"Notice how two paychecks are given from the same business, under different labels. This means that the character will receive a total of $1750 from this business."),(0,r.kt)("li",{parentName:"ul"},"A similar principle applies for ",(0,r.kt)("inlineCode",{parentName:"li"},"pdm")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"vunicorn"),", except these only contain one label. ")),(0,r.kt)("h3",{id:"created-table"},"created: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The date and time that the character was created. The ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," field contains both the date and time stored as a string, while the ",(0,r.kt)("inlineCode",{parentName:"p"},"time")," field contains an integer representing the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Epoch"},"epoch")," timestamp."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["date"] = "05-11-2021 21:31:52",\n  ["time"] = 1636662712\n}\n')),(0,r.kt)("h3",{id:"injuries-table"},"injuries: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The injuries sustained by the character. The first key-value pair is the bone ID that has sustained injuries. The second key-value pair is the injury ",(0,r.kt)("a",{parentName:"p",href:"https://cookbook.fivem.net/2019/06/23/lua-support-for-compile-time-jenkins-hashes/"},"Jenkins hash"),". Lastly, the third key-value pair stores all information for the specific injury such as the type of wound, bleed time, label and meta data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  [31086 --[[boneId]]] = {\n    [-1716589765 --[[injuryHash]]] = {\n      ["type"] = "penetrating",\n      ["bleed"] = -1,\n      ["string"] = "High-speed Projectile",\n      ["treatableWithBandage"] = false,\n      ["treatmentPrice"] = 500,\n      ["stage"] = 2,\n      ["bandagedTime"] = 0\n    }\n  }\n}\n')),(0,r.kt)("h3",{id:"licenses-table"},"licenses: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The licenses held by the character. All possible license fields are shown below, where dates are stored in ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Epoch"},"epoch")," milliseconds."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["driver"] = {\n    ["status"] = "valid",\n    ["issue_date"] = 1636662712000,\n    ["issued_by"] = "State of San Andreas"\n  },\n  ["firearm"] = {\n    ["status"] = "suspended",\n    ["issue_date"] = 1636662712000,\n    ["issued_by"] = "Hon. Judge Oliver Hall",\n    ["suspension_date"] = 1636663523000,\n    ["suspension_end"] = 1636763523000,\n    ["suspension_reason"] = "Illegal Hunting",\n    ["suspended_by"] = "Trooper Erwin McNulty"\n  }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"  Dates here are stored in ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Epoch"},"epoch")," milliseconds rather than seconds."))),(0,r.kt)("h3",{id:"whitelist-table"},"whitelist: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The whitelists held by the character. The key-value pairs represent the whitelist type and whitelist level respectively."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["police"] = 5,\n  ["doctor"] = 0,\n  ["judge"] = 15\n}\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"A whitelist level of ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," indicates a whitelist was previously held but removed."))),(0,r.kt)("h3",{id:"appearance-table"},"appearance: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The facial and body appearance of the character. This stores features such as tattoos, barber customisation and hair. Outfits are stored separately in a different database table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"{\n\n}\n")),(0,r.kt)("h3",{id:"inventory-table"},"inventory: ",(0,r.kt)("inlineCode",{parentName:"h3"},"table")),(0,r.kt)("p",null,"The inventory of the character. ",(0,r.kt)("inlineCode",{parentName:"p"},"max_capacity")," represents the number of rows that are available in the inventory, ",(0,r.kt)("inlineCode",{parentName:"p"},"max_weight")," the maximum weight level and ",(0,r.kt)("inlineCode",{parentName:"p"},"weight")," the current weight level. All items are stored under the ",(0,r.kt)("inlineCode",{parentName:"p"},"items")," field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  ["max_capacity"] = 5,\n  ["max_weight"] = 100,\n  ["weight"] = 32,\n  ["items"] = {\n    ["0"] = {\n      ["name"] = "pistol",\n      ["label"] = "Pistol",\n      ["itemid"] = 453432689,\n      ["weight"] = 12,\n      ["stackable"] = false,\n      ["quantity"] = 1,\n      ["created"] = 1636664281,\n      ["serial"] = "K1038384"\n    },\n    ["2"] = {\n      ["name"] = "pistolammo",\n      ["label"] = "Pistol Ammo",\n      ["itemid"] = 64,\n      ["weight"] = 5,\n      ["stackable"] = true,\n      ["quantity"] = 4,\n      ["created"] = 1636664362\n    }\n  }\n}\n')),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Inventory slots (or indicies) use zero-based numbering, where the initial element of the array is assigned the index ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", rather than the index ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"."))))}p.isMDXComponent=!0}}]);