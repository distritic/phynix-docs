"use strict";(self.webpackChunkphynix=self.webpackChunkphynix||[]).push([[402],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),h=s(n),d=i,p=h["".concat(c,".").concat(d)]||h[d]||u[d]||r;return n?a.createElement(p,l(l({ref:t},m),{},{components:n})):a.createElement(p,l({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7818:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return h}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={sidebar_position:2},c="Methods",s={unversionedId:"char-class/methods",id:"char-class/methods",isDocsHomePage:!1,title:"Methods",description:"The character object comes with an array of functions used by resources to update the object.",source:"@site/docs/char-class/methods.md",sourceDirName:"char-class",slug:"/char-class/methods",permalink:"/docs/char-class/methods",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/char-class/methods.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Accessing the Object",permalink:"/docs/char-class/get-object"},next:{title:"Attributes",permalink:"/docs/char-class/attributes"}},m=[{value:"set",id:"set",children:[],level:2},{value:"get",id:"get",children:[],level:2},{value:"givePaycheck",id:"givepaycheck",children:[],level:2},{value:"giveMoney",id:"givemoney",children:[],level:2},{value:"removeMoney",id:"removemoney",children:[],level:2},{value:"getBankAccount",id:"getbankaccount",children:[],level:2},{value:"giveCrypto",id:"givecrypto",children:[],level:2},{value:"removeCrypto",id:"removecrypto",children:[],level:2},{value:"getName",id:"getname",children:[],level:2},{value:"getFullName",id:"getfullname",children:[],level:2},{value:"getWeapons",id:"getweapons",children:[],level:2},{value:"removeWeapons",id:"removeweapons",children:[],level:2},{value:"getLicenses",id:"getlicenses",children:[],level:2},{value:"hasLicense",id:"haslicense",children:[],level:2},{value:"hasItem",id:"hasitem",children:[],level:2},{value:"canHoldItem",id:"canholditem",children:[],level:2},{value:"getItem",id:"getitem",children:[],level:2},{value:"getItemByIndex",id:"getitembyindex",children:[],level:2},{value:"getItemWithField",id:"getitemwithfield",children:[],level:2},{value:"giveItem",id:"giveitem",children:[],level:2},{value:"putItemInSlot",id:"putiteminslot",children:[],level:2},{value:"removeItem",id:"removeitem",children:[],level:2},{value:"removeItemWithField",id:"removeitemwithfield",children:[],level:2},{value:"removeAllItems",id:"removeallitems",children:[],level:2},{value:"removeItemByIndex",id:"removeitembyindex",children:[],level:2},{value:"modifyItem",id:"modifyitem",children:[],level:2},{value:"modifyItemDurability",id:"modifyitemdurability",children:[],level:2},{value:"moveItemSlots",id:"moveitemslots",children:[],level:2},{value:"recountWeight",id:"recountweight",children:[],level:2},{value:"setMaxInventoryWeight",id:"setmaxinventoryweight",children:[],level:2}],u={toc:m};function h(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"methods"},"Methods"),(0,r.kt)("p",null,"The character object comes with an array of functions used by resources to update the object."),(0,r.kt)("h2",{id:"set"},"set"),(0,r.kt)("p",null,"This function is used to set a field in the character object. The collection of fields which exist for a character are delared in the ",(0,r.kt)("a",{parentName:"p",href:"attributes"},"Attributes")," guide."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.set(key --[[string]], value --[[any]]);\n-- key: the field to be updated\n-- value: the new value assigned to the field\n")),(0,r.kt)("p",null,"There are a few specific cases where updating a field will trigger additional logic."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Updating the ",(0,r.kt)("inlineCode",{parentName:"li"},"money")," field will trigger a client event, ",(0,r.kt)("inlineCode",{parentName:"li"},"core:setMoneyDisplay")," with the first parameter ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," and second parameter the new value."),(0,r.kt)("li",{parentName:"ul"},"Updating the ",(0,r.kt)("inlineCode",{parentName:"li"},"job")," field will trigger a client event, ",(0,r.kt)("inlineCode",{parentName:"li"},"core:updateJob")," and server event, ",(0,r.kt)("inlineCode",{parentName:"li"},"chars:updateJob"),". The server has an additional parameter ",(0,r.kt)("inlineCode",{parentName:"li"},"source"),", followed by the new value and old value."),(0,r.kt)("li",{parentName:"ul"},"Updating the ",(0,r.kt)("inlineCode",{parentName:"li"},"whitelist")," field will trigger a client event, ",(0,r.kt)("inlineCode",{parentName:"li"},"core:updateWhitelist")," with the only parameter being the new value.")),(0,r.kt)("p",null,"An example can be seen below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},'RegisterServerEvent("police:clockOn")\nAddEventHandler("police:clockOn", function()\n  local char = exports.px_chars:GetCharacter(source);\n  local wl = char.get("whitelist");\n\n  if wl.police and wl.police > 0 then\n    char.set("job", "police");\n    TriggerClientEvent("core:notify", source, "You are now on-duty as police.");\n  end\nend);\n')),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We do not recommend using this method to update dynamic table fields such as ",(0,r.kt)("inlineCode",{parentName:"p"},"inventory"),", as in doing so you could corrupt or invalidate data."))),(0,r.kt)("h2",{id:"get"},"get"),(0,r.kt)("p",null,"This function is used to return a field from the character object. The collection of fields which exist for a character are delared in the ",(0,r.kt)("a",{parentName:"p",href:"attributes"},"Attributes")," guide."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local value --[[any]] = char.get(key --[[string]]);\n-- key: the field to return\n")),(0,r.kt)("p",null,"An example can be seen below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},'RegisterServerEvent("police:checkJob")\nAddEventHandler("police:checkJob", function(clientEvent)\n  local char = exports.px_chars:GetCharacter(source);\n  TriggerClientEvent(clientEvent, char.get("job") == "police");\nend)\n')),(0,r.kt)("h2",{id:"givepaycheck"},"givePaycheck"),(0,r.kt)("p",null,"This function is used to give a paycheck to the character from a business. The paycheck will appear in the character's personal account transaction records when collected."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.givePaycheck(amount --[[int]], businessName --[[string]], note --[[string]], noNotify --[[bool]]);\n-- amount: the amount of money to give\n-- businessName: the name of the business paying\n-- note: transaction note\n-- noNotify?: whether a notification should **not** be received for the payment\n")),(0,r.kt)("p",null,"An example can be seen below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},'-- An exploitable event, but shown for demonstration purposes\nRegisterServerEvent("tow:impoundVehicle")\nAddEventHandler("tow:impoundVehicle", function()\n  local char = exports.px_chars:GetCharacter(source);\n  char.givePaycheck(500, "state", "LSPD Auto Impound", false);\nend)\n')),(0,r.kt)("h2",{id:"givemoney"},"giveMoney"),(0,r.kt)("p",null,"This function is used to give the character money."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.giveMoney(amount --[[int]]);\n-- amount: the amount of money to give\n")),(0,r.kt)("h2",{id:"removemoney"},"removeMoney"),(0,r.kt)("p",null,"This function is used to remove money from the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeMoney(amount --[[int]]);\n-- amount: amount of money to remove\n")),(0,r.kt)("h2",{id:"getbankaccount"},"getBankAccount"),(0,r.kt)("p",null,"This function is used to return the bank account object assigned to the character's personal account."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local bankAccount --[[object]] = char.getBankAccount();\n")),(0,r.kt)("h2",{id:"givecrypto"},"giveCrypto"),(0,r.kt)("p",null,"This function is used to give crypto to the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.giveCrypto(amount --[[int]]);\n-- amount: amount of crypto to give\n")),(0,r.kt)("h2",{id:"removecrypto"},"removeCrypto"),(0,r.kt)("p",null,"This function is used to give remove crypto from the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeCrypto(amount --[[int]]);\n-- amount: amount of crypto to remove\n")),(0,r.kt)("h2",{id:"getname"},"getName"),(0,r.kt)("p",null,"This function is used to return the concatenated first and last name of the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local name --[[string]] = char.getName();\n")),(0,r.kt)("h2",{id:"getfullname"},"getFullName"),(0,r.kt)("p",null,"This function is used to return the concatenated full name of the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local fullName --[[string]] = char.getFullName();\n")),(0,r.kt)("h2",{id:"getweapons"},"getWeapons"),(0,r.kt)("p",null,"This function is used to return an array of weapon items in the characters inventory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local weapons --[[table]] = char.getWeapons();\n")),(0,r.kt)("h2",{id:"removeweapons"},"removeWeapons"),(0,r.kt)("p",null,"This function is used to remove an weapon items from the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeWeapons();\n")),(0,r.kt)("h2",{id:"getlicenses"},"getLicenses"),(0,r.kt)("p",null,"This function is used to return an array of character licenses."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local licenses --[[table]] = char.getLicenses();\n")),(0,r.kt)("h2",{id:"haslicense"},"hasLicense"),(0,r.kt)("p",null,"This function will return whether the character has the specific license."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local hasLicense --[[bool]] = char.hasLicense(type --[[string]]);\n-- type: the license type to check for\n")),(0,r.kt)("h2",{id:"hasitem"},"hasItem"),(0,r.kt)("p",null,"This function will return whether the character has an item."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local hasItem --[[bool]] = char.hasItem(item --[[string/table]], quantity --[[int]]);\n-- item: the item to check for\n-- quantity?: the quantity to check for\n")),(0,r.kt)("h2",{id:"canholditem"},"canHoldItem"),(0,r.kt)("p",null,"This function will return whether the character can hold an item."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local canHoldItem --[[bool]] = char.canHoldItem(item --[[string]], quantity --[[int]]);\n-- item: the item to check for\n-- quantity?: the quantity to check for\n")),(0,r.kt)("h2",{id:"getitem"},"getItem"),(0,r.kt)("p",null,"This function will return the item the character has by its name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local item --[[table]] = char.getItem(name --[[string]]);\n-- name: the item name to find\n")),(0,r.kt)("h2",{id:"getitembyindex"},"getItemByIndex"),(0,r.kt)("p",null,"This function will return the item in the specified inventory index."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local item --[[table]] = char.getItemByIndex(index --[[int]]);\n-- index: the index location in the inventory (starting at 0)\n")),(0,r.kt)("h2",{id:"getitemwithfield"},"getItemWithField"),(0,r.kt)("p",null,"This function will return the item the character has by its field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local item --[[table]] = char.getItemWithField(key --[[string]], value --[[any]]);\n-- key: the field name\n-- value: the field value\n")),(0,r.kt)("h2",{id:"giveitem"},"giveItem"),(0,r.kt)("p",null,"This function will give the item to the character at the next available index. It will return the item inventory index if successful, or a boolean flag otherwise."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"local retval --[[bool/string]] = char.giveItem(name --[[string]], quantity --[[int]]);\n-- name: the item name to give\n-- quantity?: the amount to give\n")),(0,r.kt)("h2",{id:"putiteminslot"},"putItemInSlot"),(0,r.kt)("p",null,"This function will place the item in the given inventory index."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.putItemInSlot(item --[[table]], slot --[[int]], quantity --[[int]], cb --[[function]]);\n-- item: the item to place into the index\n-- slot: the index to place the item into\n-- quantity?: the number of items to place into the index\n-- cb: a callback function cb(success: bool)\n")),(0,r.kt)("h2",{id:"removeitem"},"removeItem"),(0,r.kt)("p",null,"This function will remove the item from the characters inventory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeItem(item --[[table/string]], quantity --[[int]], index --[[int]]);\n-- item: the item to remove\n-- quantity?: the amount to remove (-1 for all)\n-- index?: the inventory index to remove at\n")),(0,r.kt)("h2",{id:"removeitemwithfield"},"removeItemWithField"),(0,r.kt)("p",null,"This function will remove the item from the characters inventory with a specified field value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeItemWithField(key --[[string]], value --[[any]]);\n-- key: the field to search for\n-- value: the field value of item to remove\n")),(0,r.kt)("h2",{id:"removeallitems"},"removeAllItems"),(0,r.kt)("p",null,"This function will remove all the items from the characters inventory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeAllItems();\n")),(0,r.kt)("h2",{id:"removeitembyindex"},"removeItemByIndex"),(0,r.kt)("p",null,"This function will remove the item from the characters inventory by index only."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.removeItemByIndex(index --[[int]], quantity --[[int]]);\n-- index: the index to remove from\n-- quantity?: the quantity to remove (-1 for all)\n")),(0,r.kt)("h2",{id:"modifyitem"},"modifyItem"),(0,r.kt)("p",null,"This function will modify an item field."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.modifyItem(item --[[string/table]], key --[[string]], value --[[any]], index --[[int]]);\n-- item: the item to modify\n-- key: the field name to modify\n-- value: the new field value\n-- index?: override item param and modify the specified index directly\n")),(0,r.kt)("h2",{id:"modifyitemdurability"},"modifyItemDurability"),(0,r.kt)("p",null,"This function will modify the durability of an item."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.modifyItemDurability(index --[[int]], change --[[int]]);\n-- index: the item inventory index to modify\n-- change: the change in item durability in seconds, e.g. -60000 to remove 60000 seconds\n")),(0,r.kt)("h2",{id:"moveitemslots"},"moveItemSlots"),(0,r.kt)("p",null,"This function will move an item from the specified inventory index to a new one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.moveItemSlots(fromIndex --[[int]], toIndex --[[int]], quantity --[[int]]);\n-- fromIndex: the item index to move from\n-- toIndex: the item index to move to\n-- quantity?: the amount to move\n")),(0,r.kt)("h2",{id:"recountweight"},"recountWeight"),(0,r.kt)("p",null,"This function will recount character inventory weight."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.recountWeight();\n")),(0,r.kt)("h2",{id:"setmaxinventoryweight"},"setMaxInventoryWeight"),(0,r.kt)("p",null,"This function will temporarily override the default maximum inventory weight for the character."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="server/main.lua"',title:'"server/main.lua"'},"char.setMaxInventoryWeight(maxWeight --[[int]]);\n-- maxWeight: the new maximum weight\n")))}h.isMDXComponent=!0}}]);